# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI

on:
  push:
    branches-ignore:
    - develop
    - release/*
    - master
    paths-ignore:
    - '**/README.md'
    - '**/docs'
    - '.github/**'
    - "docs/**"
    - ".git/*"
    - ".vs/*"
    - ".config/*"
    - ".github/*"
    - "Directory.Build.props"
    - "Directory.Build.targets"
    - "Directory.Build.props"
    - "docker-compose.yml"
    - "docker-compose.override.yml"
    - "docker-compose.vs.debug.yml"
    - "docker-compose.vs.release.yml"
    - "docker-compose.dcrpoj"
    - "**/*.sln"
    - "global.json"
    - "IdentityServer8.DotNet.ruleset"
    - "LICENSCE"
    - "Nuget.config"
    - "SECURITY.md"
    - "SPONSORS.md"
    - "README.md"
    - "samples"
    - "nuget"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [macOS-latest, ubuntu-latest, windows-latest]
    name: ${{ matrix.runs-on }}
    runs-on: ${{ matrix.runs-on }}
    steps:
    - uses: actions/checkout@v4
      with:        
        fetch-depth: 0
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x


    - uses: dotnet/nbgv@master
      id: nbgv

    - name: Display Package Version
      run: echo "PackageVersion=${{ steps.nbgv.outputs.SimpleVersion }}-ci.${{ steps.nbgv.outputs.VersionRevision }}"



    - name: Restore dependencies
      run: dotnet restore IdentityServer8.AllProjects.sln
    - name: Build
      run: dotnet build IdentityServer8.AllProjects.sln --configuration Release --no-restore -p:Version=${{ steps.nbgv.outputs.SimpleVersion }}-ci.${{ steps.nbgv.outputs.VersionRevision }}
    - name: Test
      run: dotnet test IdentityServer8.AllProjects.sln --configuration Release --no-build --nologo /p:CollectCoverage=true --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4.0.1
      if: ${{ (runner.os == 'Windows') }} 
      env:
        token: ${{ secrets.CODECOV_TOKEN }}
        slug: alexhiggins732/IdentityServer8
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

